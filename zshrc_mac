#before need install zsh & oh-my-zsh
export ZSH=$HOME/.oh-my-zsh
export GOROOT=/usr/local/go
export GOPATH=$HOME/Programming/golang
export MANPATH="/usr/local/man:$MANPATH"
export PATH=$HOME/bin:/usr/local/bin:/usr/local/sbin:$GOROOT/bin:$GOPATH/bin:$PATH

ZSH_THEME="maran"


autoload -U zcalc
autoload -U compinit promptinit 
autoload -U url-quote-magic

zle -N self-insert url-quote-magic
setopt autocd

zstyle ':completion:*' menu select=long-list select=0
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:processes' command 'ps xua'
zstyle ':completion:*:processes' sort false
zstyle ':completion:*:processes-names' command 'ps xho command'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh-cache


DISABLE_AUTO_UPDATE="false"

export UPDATE_ZSH_DAYS=3


HIST_STAMPS="mm/dd/yyyy"
export HISTSIZE=10000
export SAVEHIST=$HISTSIZE
setopt APPEND_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt share_history append_history extended_history hist_no_store hist_ignore_all_dups hist_ignore_space

export EDITOR='vim'

if [[ -n "$SSH_CLIENT" || -n "$SSH2_CLIENT" ]]; then
  host="${black}[${blue}%m${black}] " #SSH
else
  unset host 
fi


alias mount_home="mount -t nfs gate.local:mnt/alex /Users/gaa/Mount/home/alex"
alias er="trans -e yandex -user-agent 'Mozilla/5.0 (Windows NT 6.2; rv:50.0) Gecko/20100101 Firefox/50.0' -brief :ru "
alias re="trans -e yandex -user-agent 'Mozilla/5.0 (Windows NT 6.2; rv:50.0) Gecko/20100101 Firefox/50.0' -brief :en "
alias ks="killall ssh"
alias diskused="ncdu"
alias pwgen="pwgen -s -1 15"
alias pasgen="pwgen"
alias logc="grc cat"
alias logt="grc tail"
alias logh="grc head"
alias -g H="| head"
alias -g T="| tail"
alias -g G="| grep -i"
alias -g L="| less"
alias -g M="| most"
alias -g B="&|"
alias -g HL="--help"
alias -g LL="2>&1 | less"
alias -g CA="2>&1 | cat -A"
alias -g NE="2> /dev/null"
alias -g NUL="> /dev/null 2>&1"
alias gitl="git log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short"
alias flake8="flake8 --count"
alias clear_history='echo "" > ~/.zsh_history & exec $SHELL -l'

export GREP_OPTIONS='--color=auto'
export GREP_COLOR='1;32'
export ARCHFLAGS="-arch x86_64"
export SSH_KEY_PATH="~/.ssh/id_rsa_work"
export SSH_KEY_PATH="~/.ssh/id_rsa_my"



source "`brew --prefix`/etc/grc.zsh"
source $ZSH/oh-my-zsh.sh
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.oh-my-zsh/plugins/go/go.plugin.zsh

if [[ -r $HOME/.my_settings ]]; then
    source $HOME/.my_settings
fi



plugins=(go git brew mvn colored-man colorize zsh-syntax-highlighting autojump common-aliases history sublime sudo osx zsh-completions crystal command-not-found)



COWPATH="$COWPATH:$HOME/.cowsay"
fpath=(/usr/local/share/zsh-completions $fpath)
typeset -A ZSH_HIGHLIGHT_STYLES


ZSH_HIGHLIGHT_STYLES=(
  'alias'           'fg=153,bold'
  'builtin'         'fg=153'
  'function'        'fg=166'
  'command'         'fg=153'
  'precommand'      'fg=153, underline'
  'hashed-commands' 'fg=153'
  'path'            'underline'
  'globbing'        'fg=166'
  )


extract () {
 if [ -f $1 ] ; then
   case $1 in
     *.tar.bz2)   tar xjf $1        ;;
*.tar.gz)    tar xzf $1     ;;
*.bz2)       bunzip2 $1       ;;
*.rar)       unrar x $1     ;;
*.gz)        gunzip $1     ;;
*.tar)       tar xf $1        ;;
*.tbz2)      tar xjf $1      ;;
*.tbz)       tar -xjvf $1    ;;
*.tgz)       tar xzf $1       ;;
*.zip)       unzip $1     ;;
*.Z)         uncompress $1  ;;
*.7z)        7z x $1    ;;
*)           echo "I don't know how to extract '$1'..." ;;
esac
else
 echo "'$1' is not a valid file"
fi
}

pk () {
 if [ $1 ] ; then
   case $1 in
     tbz)       tar cjvf $2.tar.bz2 $2      ;;
tgz)       tar czvf $2.tar.gz  $2       ;;
tar)      tar cpvf $2.tar  $2       ;;
bz2)    bzip $2 ;;
gz)        gzip -c -9 -n $2 > $2.gz ;;
zip)       zip -r $2.zip $2   ;;
7z)        7z a $2.7z $2    ;;
*)         echo "'$1' cannot be packed via pk()" ;;
esac
else
 echo "'$1' is not a valid file"
fi
}

myip() {
  echo "LAN" && awk '/inet / && $2 != "127.0.0.1"{print $2}' <(ifconfig)
  echo "WAN" 
  curl -s ipinfo.io/`lynx --source http://www.formyip.com/ |grep The | awk {'print $5'}` | jq -r '.ip,.country'
}

send_me_sms(){
  if [ -z $1 ]
    then
    msg=up
  else
    msg=$1
  fi     
  curl -o /dev/null -s -d  "msg=$msg" https://sms.ru/sms/send\?api_id=$API_SMS\&to=$MY_PHONE
}

check_balans(){
  address=$BC_ADR
  bal=`curl -s https://blockchain.info/rawaddr/$address 2>&1 | jq -r '.final_balance'`
  echo $address = $bal
}

gzipchk(){ curl -I -H 'Accept-Encoding: gzip,deflate' "$@"; }

function cowsayfortune {
  NUMOFCOWS=`cowsay -l | tail -n +2 | wc -w`
  WHICHCOW=$((RANDOM%$NUMOFCOWS+1))
  THISCOW=`cowsay -l | tail -n +2 | sed -e 's/\ /\'$'\n/g' | sed $WHICHCOW'q;d'`

  fortune | cowsay -f $THISCOW -W 100
}

mvn-in-colors() {

  local color_red=$(tput bold)$(tput setaf 1)
  local color_green=$(tput bold)$(tput setaf 2)
  local color_yellow=$(tput bold)$(tput setaf 3)
  local color_white=$(tput bold)$(tput setaf 7)
  local color_reset=$(tput sgr0)

  echo -ne ${color_reset}


  tmp_file=$(mktemp)

  (command mvn $@ ; echo $? > $tmp_file) | sed \
  -e "s/\(.*-\{55\}\+$\|.*\[INFO\] Scanning for projects.*\|.*\[INFO\] Building.*\|^Running .*\|^ T E S T S$\|^Results.*\)/${color_white}\1${color_reset}/g" \
  -e "s/\(.*\[INFO\] BUILD SUCCESS$\|^Tests run:.*Failures: 0.*Errors: 0.*Skipped: 0.*\)/${color_green}\1${color_reset}/g" \
  -e "s/\(.*\[WARNING].*\|^NOTE: Maven is executing in offline mode\.\|^Tests run:.*Failures: 0, Errors: 0, Skipped: [^0].*\)/${color_yellow}\1${color_reset}/g" \
  -e "s/\(.*\[INFO\] BUILD FAILURE\|.* <<< FAILURE!$\|.* <<< ERROR!$\|^Tests in error:.*\|^Tests run:.*Failures: [^0].*\|^Tests run:.*Errors: [^0].*\)/${color_red}\1${color_reset}/g"

  echo -ne ${color_reset}

  read mvn_exit_code < $tmp_file
  \rm -f $tmp_file

  return $mvn_exit_code
}

echo -e `curl -s  http://fucking-great-advice.ru/api/random | awk -F \" '{print $8}'` |sed 's/\&nbsp;/ /g'
